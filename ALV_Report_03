*&---------------------------------------------------------------------*
*& Report  ZALV_REPORT002
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZALV_REPORT002.



TYPES : BEGIN OF lty_vbak,
       VBELN TYPE VBELN_VA,
       ERDAT TYPE ERDAT,
       ERZET TYPE ERZET,
       ERNAM TYPE ERNAM,
       VBTYP TYPE VBTYP,
       END OF lty_vbak.

DATA : lt_vbak TYPE TABLE OF lty_vbak.
DATA : ls_vbak TYPE lty_vbak.


TYPES : BEGIN OF lty_vbap,
       VBELN TYPE VBELN_VA,
       POSNR TYPE POSNR_VA,
       MATNR TYPE MATNR,
       END OF lty_vbaP.

DATA : lt_vbap TYPE TABLE OF lty_vbap.
DATA : ls_vbap TYPE lty_vbap.
DATA : lt_fieldcat  TYPE SLIS_T_FIELDCAT_ALV.


DATA : lt_final TYPE TABLE OF ZSTR_SALES_26.
DATA : ls_final type ZSTR_SALES_26.

DATA: lv_vbeln TYPE VBELN_VA.

SELECT-OPTIONS : s_vbeln FOR lv_vbeln.

SELECT  vbeln erdat erzet ernam vbtyp
  FROM vbak
  INTO TABLE lt_vbak
  WHERE vbeln IN s_vbeln.

*NOT INITIAL MEANS NOT NULL

 IF LT_vbak IS NOT INITIAL.
   SELECT vbeln posnr matnr
     FROM vbap
     INTO TABLE lt_vbap
     FOR ALL ENTRIES in LT_VBAK
     where vbeln = lt_vbak-vbeln.
  ENDIF.

  loop at lt_vbak INTO ls_vbak.
    loop at lt_vbap INTO ls_vbap WHERE vbeln = ls_vbak-vbeln.
      ls_final-vbeln = ls_vbak-vbeln.
        ls_final-erdat = ls_vbak-erdat.
          ls_final-erzet = ls_vbak-erzet.
            ls_final-ernam = ls_vbak-ernam.
              ls_final-vbtyp = ls_vbak-vbtyp.
                ls_final-posnr = ls_vbap-posnr.
                  ls_final-matnr = ls_vbap-matnr.

      APPEND ls_final TO lt_final.
      CLEAR: ls_final.
      ENDLOOP.
      ENDLOOP.

 CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
  EXPORTING
*    I_PROGRAM_NAME               =
*   I_INTERNAL_TABNAME           =
        I_STRUCTURE_NAME             =  'ZSTR_SALES_26'
*    I_CLIENT_NEVER_DISPLAY       = 'X'
*    I_INCLNAME                   =
*    I_BYPASSING_BUFFER           =
*    I_BUFFER_ACTIVE              =
   CHANGING
     CT_FIELDCAT                  =  lt_fieldcat
    EXCEPTIONS
      INCONSISTENT_INTERFACE       = 1
      PROGRAM_ERROR                = 2
      OTHERS                       = 3
           .
 IF SY-SUBRC <> 0.
* Implement suitable error handling here
 ENDIF.


 CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
  EXPORTING
*    I_INTERFACE_CHECK                 = ' '
*    I_BYPASSING_BUFFER                = ' '
*    I_BUFFER_ACTIVE                   = ' '
*    I_CALLBACK_PROGRAM                = ' '
*    I_CALLBACK_PF_STATUS_SET          = ' '
*    I_CALLBACK_USER_COMMAND           = ' '
*    I_CALLBACK_TOP_OF_PAGE            = ' '
*    I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*    I_CALLBACK_HTML_END_OF_LIST       = ' '
*    I_STRUCTURE_NAME                  =
*    I_BACKGROUND_ID                   = ' '
*    I_GRID_TITLE                      =
*    I_GRID_SETTINGS                   =
*    IS_LAYOUT                         =
    IT_FIELDCAT                       =  lt_fieldcat
*    IT_EXCLUDING                      =
*    IT_SPECIAL_GROUPS                 =
*    IT_SORT                           =
*    IT_FILTER                         =
*    IS_SEL_HIDE                       =
*    I_DEFAULT                         = 'X'
*    I_SAVE                            = ' '
*    IS_VARIANT                        =
*    IT_EVENTS                         =
*    IT_EVENT_EXIT                     =
*    IS_PRINT                          =
*    IS_REPREP_ID                      =
*    I_SCREEN_START_COLUMN             = 0
*    I_SCREEN_START_LINE               = 0
*    I_SCREEN_END_COLUMN               = 0
*    I_SCREEN_END_LINE                 = 0
*    I_HTML_HEIGHT_TOP                 = 0
*    I_HTML_HEIGHT_END                 = 0
*    IT_ALV_GRAPHICS                   =
*    IT_HYPERLINK                      =
*    IT_ADD_FIELDCAT                   =
*    IT_EXCEPT_QINFO                   =
*    IR_SALV_FULLSCREEN_ADAPTER        =
*  IMPORTING
*    E_EXIT_CAUSED_BY_CALLER           =
*    ES_EXIT_CAUSED_BY_USER            =
   TABLES
     T_OUTTAB                          = lt_final
  EXCEPTIONS
    PROGRAM_ERROR                     = 1
    OTHERS                            = 2
           .
 IF SY-SUBRC <> 0.
* Implement suitable error handling here
 ENDIF.
